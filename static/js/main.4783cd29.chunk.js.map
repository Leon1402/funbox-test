{"version":3,"sources":["Element/Element.module.css","Element/SignText/SignText.module.css","redux/reduxStore.js","Element/Circle/Circle.jsx","Element/Description/Description.jsx","Element/SignText/SignText.jsx","Element/Element.jsx","Element/ElementContainer.jsx","App.js","serviceWorker.js","index.js","Element/Description/Description.module.css"],"names":["module","exports","initState","select","currentText","taste","signText","weight","currentWeight","status","changeTextOverAC","index","operation","type","store","createStore","state","action","map","s","i","c","Circle","props","className","circle","selectClassName","onClick","undefined","changeWeight","Description","selectMas","elem","Number","isInteger","key","elementDescription","inscription","active","SignText","elementSignText","style","color","selectElement","printText","Element","ended","element","elementItem","onMouseLeave","changeTextOver","onMouseEnter","changeTextEnter","elementCorner","elementImage","elementImageItem","e","stopPropagation","isEnded","ElementContainer","connect","ownProps","dispatch","changeWeightAC","selectElementAC","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,YAAc,6BAA6B,OAAS,wBAAwB,cAAgB,+BAA+B,OAAS,wBAAwB,MAAQ,uBAAuB,aAAe,8BAA8B,iBAAmB,kCAAkC,QAAU,yBAAyB,QAAU,2B,mBCA5VD,EAAOC,QAAU,CAAC,gBAAkB,oC,4LCKhCC,EAAY,CAEZC,OAAQ,CACJ,CAAC,GAAI,wCAAW,+EAChB,CAAC,GAAI,wCAAW,EAAG,+EACnB,CAAC,IAAK,wCAAW,EAAG,oFAAoB,iGAG5CC,YAAa,CAAC,EAAG,EAAG,GAEpBC,MAAO,CACH,+CACA,wCACA,yCAGJC,SAAU,CACN,CAAC,uIACG,4LACA,gKAEJ,CAAC,uIACG,6LACA,yJAEJ,CAAC,uIACG,4LACA,0JAGRC,OAAQ,CAAC,MAAO,IAAK,KAErBC,cAAe,CAAC,EAAG,EAAG,GAEtBC,OAAQ,CAAC,SAAU,SAAU,QAuCpBC,EAAmB,SAACC,EAAOC,GAAR,MAC3B,CAAEC,KA7EyB,0BA6EMF,MAAOA,EAAOC,UAAWA,IAKhDE,EAFHC,aAxCI,WAAgC,IAA/BC,EAA8B,uDAAtBd,EAAWe,EAAW,uCACvCN,EAAQM,EAAON,MACnB,OAAQM,EAAOJ,MACX,IAAK,mBACD,OAAO,2BACAG,GADP,IAEIP,OAAQO,EAAMP,OAAOS,KAAI,SAACC,EAAGC,GACzB,OAAIA,IAAMT,EACO,WAANQ,EAAiB,SAAW,SAChCA,OAGnB,IAAK,0BACD,OAAO,2BACAH,GADP,IAEIZ,YAAaY,EAAMZ,YAAYc,KAAI,SAACG,EAAGD,GACnC,OAAIA,IAAMT,EACCM,EAAOL,UACXS,OAGnB,IAAK,gBACD,OAAO,2BACAL,GADP,IAEIR,cAAeQ,EAAMR,cAAcU,KAAI,SAACG,EAAGD,GACvC,OAAIA,IAAMT,EACO,IAANU,EAAU,EAAIA,EAAI,EACtBA,OAGnB,QACI,OAAOL,M,gBChEJM,EAPA,SAACC,GACR,OAAO,yBAAKC,UAAS,UAAKL,IAAEM,OAAP,YAAiBF,EAAMG,oBAC5C,0BAAMC,QAAwB,QAAfJ,EAAMd,YAAgBmB,EAAWL,EAAMM,cAAeN,EAAMhB,OAAOgB,EAAMf,gBAAsB,6BAC9G,6C,gBCsBOsB,EAzBK,SAACP,GAEjB,IAQIQ,EAAYR,EAAMpB,OAAOe,KAAI,SAACc,EAAMrB,GACpC,OAAIsB,OAAOC,UAAUF,GACV,uBAAGG,IAAKxB,GAAQqB,GAEpB,0BAAMG,IAAKxB,GAAQqB,EAAK,iCAGvC,OAAO,yBAAKR,UAAWL,IAAEiB,oBAdS,IAAtBb,EAAMnB,YACC,uBAAGoB,UAAWL,IAAEkB,aAAhB,gJAEA,uBAAGb,UAAWL,IAAEkB,YAAc,IAAMlB,IAAEmB,QAAtC,2FAaf,0EACA,4BAAKf,EAAMlB,OACX,6BAAM0B,K,iBCHKQ,EAlBE,SAAChB,GAad,OAAO,yBAAKC,UAAWL,IAAEqB,iBAXT,WACZ,OAAQjB,EAAMd,QACV,IAAK,SACD,OAAO,2BAAIc,EAAMjB,SAAS,IAC9B,IAAK,MACD,OAAO,uBAAGmC,MAAO,CAACC,MAAO,YAAanB,EAAMjB,SAAS,IACzD,QACI,OAAO,2BAAIiB,EAAMjB,SAAS,GAAnB,IAAuB,0BAAMqB,QAASJ,EAAMoB,eAArB,+BAKrCC,KC0DMC,EApEC,SAACtB,GACb,IAAIZ,EAAQY,EAAMZ,MACdF,EAASc,EAAMd,OAAOE,GAMtBgC,EAAgB,WAChBpB,EAAMoB,cAAchC,IAUpBe,EAAkB,WAClB,OAAQjB,GACJ,IAAK,SACD,OAAOU,IAAEmB,OACb,IAAK,MACD,OAAOnB,IAAE2B,MACb,QACI,SAIZ,OACI,yBAAKtB,UAAWL,IAAE4B,SACd,yBAAKvB,UAAS,UAAKL,IAAE6B,YAAP,YAAsBtB,KAChCC,QAAoB,QAAXlB,OAAmBmB,EAAYe,EACxCM,aAAyB,WAAXxC,EAvBL,WACjBc,EAAM2B,eAAevC,SAsBwCiB,EACrDuB,aAAyB,WAAX1C,EArBJ,WAClBc,EAAM6B,gBAAgBzC,SAoBwCiB,GAItD,yBAAKJ,UAAS,UAAKL,IAAEkC,cAAP,YAAwB3B,OAEtC,kBAAC,EAAD,CACIvB,OAAQoB,EAAMpB,OAAOoB,EAAMf,cAAcG,IACzCN,MAAOkB,EAAMlB,MAAMM,GACnBP,YAAamB,EAAMnB,YAAYO,KAEnC,yBAAKa,UAAWL,IAAEmC,cACd,yBAAK9B,UAAWL,IAAEoC,oBAGtB,kBAAC,EAAD,CAAQhD,OAAQgB,EAAMhB,OAClBC,cAAee,EAAMf,cAAcG,GACnCA,MAAOA,EACPF,OAAQA,EACRiB,gBAAiBA,EACjBG,aAnDG,SAAC2B,GAChBA,EAAEC,kBACFlC,EAAMM,aAAalB,MAmDX,yBAAKa,UAAS,UAAKL,IAAEuC,QAAP,YAAkBhC,QAGpC,kBAAC,EAAD,CAAUf,MAAOA,EACbgC,cAAeA,EACfrC,SAAUiB,EAAMjB,SAASK,GACzBF,OAAQA,MC/BTkD,EADUC,aAjCH,SAAC5C,EAAO6C,GAC1B,MAAO,CACHpD,OAAQO,EAAMP,OACdN,OAAQa,EAAMb,OACdK,cAAeQ,EAAMR,cACrBH,MAAOW,EAAMX,MACbD,YAAaY,EAAMZ,YACnBE,SAAUU,EAAMV,SAChBC,OAAQS,EAAMT,OACdI,MAAOkD,EAASlD,UAGC,SAACmD,GACtB,MAAO,CAEHjC,aAAc,SAAClB,GACXmD,EL4DkB,SAACnD,GAAD,MAAY,CAAEE,KA7EtB,gBA6E2CF,MAAOA,GK5DnDoD,CAAepD,KAG5BgC,cAAe,SAAChC,GACZmD,ELqDmB,SAACnD,GAAD,MAAY,CAAEE,KA5EpB,mBA4E4CF,MAAOA,GKrDvDqD,CAAgBrD,KAI7BuC,eAAgB,SAACvC,GACbmD,EAASpD,EAAiBC,EAAO,KAErCyC,gBAAiB,SAACzC,GACdmD,EAASpD,EAAiBC,EAAO,QAKpBiD,CAA6Cf,GCTvDoB,EAzBH,SAAC1C,GACX,IAAIZ,EAAQ,EAEZ,OACE,yBAAKa,UAAU,OACb,yBAAKA,UAAU,aACf,yBAAKA,UAAU,eAEf,yBAAKA,UAAU,WACb,yBAAKA,UAAU,WACb,mKAIF,yBAAKA,UAAU,YACb,kBAAC,EAAD,CAAkBb,MAAOA,MACzB,kBAAC,EAAD,CAAkBA,MAAOA,MACzB,kBAAC,EAAD,CAAkBA,MAAOA,UCTfuD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTJC,IAASC,OACP,kBAAC,IAAD,CAAU1D,MAASA,GACjB,kBAAC,EAAD,OAEF2D,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBExI5BpF,EAAOC,QAAU,CAAC,mBAAqB,wCAAwC,YAAc,iCAAiC,OAAS,+B","file":"static/js/main.4783cd29.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"elementItem\":\"Element_elementItem__38sf8\",\"circle\":\"Element_circle__Y0KEw\",\"elementCorner\":\"Element_elementCorner__3TVN-\",\"active\":\"Element_active__3VhNj\",\"ended\":\"Element_ended__1zWUu\",\"elementImage\":\"Element_elementImage__EH3yl\",\"elementImageItem\":\"Element_elementImageItem__a0jD7\",\"isEnded\":\"Element_isEnded__3WERf\",\"element\":\"Element_element__20nFs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elementSignText\":\"SignText_elementSignText__27lRt\"};","import { createStore } from \"redux\";\r\n\r\nconst CHANGE_IS_ACTIVE = 'CHANGE-IS-ACTIVE';\r\nconst CHANGE_DESCRIPTION_TEXT = 'CHANGE-DESCRIPTION-TEXT';\r\nconst CHANGE_WEIGHT = 'CHANGE-WEIGHT';\r\n\r\nlet initState = {\r\n    // описание выбранной порции\r\n    select: [\r\n        [10, ' порций', ' мышь в подарок'],\r\n        [40, ' порций', 2, ' мыши в подарок'],\r\n        [100, ' порций', 5, ' мышей в подарок', ' заказчик доволен']\r\n    ],\r\n    // Номер текущего текста, меняющегося в активной упаковке\r\n    currentText: [0, 0, 0],\r\n    // Начинки\r\n    taste: [\r\n        'с фуа-гра',\r\n        'с рыбой',\r\n        'с курой'\r\n    ],\r\n    // Подпись под упаковкой с различными начинками\r\n    signText: [\r\n        ['Чего сидишь? Порадуй котэ, ',\r\n            'Печень утки разварная с артишоками.',\r\n            'Печалька, с фуа-гра закончился.'],\r\n\r\n        ['Чего сидишь? Порадуй котэ, ',\r\n            'Филе из цыплят с трюфелями в бульоне',\r\n            'Печалька, с рыбой закончился.'],\r\n\r\n        ['Чего сидишь? Порадуй котэ, ',\r\n            'Печень утки разварная с артишоками.',\r\n            'Печалька, с курой закончился.'],\r\n    ],\r\n    // Список всех доступных объемов порции\r\n    weight: ['0,5', '2', '5'],\r\n    // текущий выбранный объем упаковок\r\n    currentWeight: [0, 1, 2],\r\n    // статус упаковок обычная, выбранная, или закончилась\r\n    status: ['normal', 'active', 'end'],\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n    let index = action.index\r\n    switch (action.type) {\r\n        case 'CHANGE-IS-ACTIVE': // сделать упаковку активной\r\n            return {\r\n                ...state,\r\n                status: state.status.map((s, i) => {\r\n                    if (i === index)\r\n                        return s === 'normal' ? 'active' : 'normal';\r\n                    return s\r\n                })\r\n            }\r\n        case 'CHANGE-DESCRIPTION-TEXT': //смена текста, при наведении и отвода мыши\r\n            return {\r\n                ...state,\r\n                currentText: state.currentText.map((c, i) => {\r\n                    if (i === index)\r\n                        return action.operation\r\n                    return c;\r\n                })\r\n            }\r\n        case 'CHANGE-WEIGHT': //смена объема упаковки\r\n            return {\r\n                ...state,\r\n                currentWeight: state.currentWeight.map((c, i) => {\r\n                    if (i === index)\r\n                        return c === 2 ? 0 : c + 1;\r\n                    return c;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const selectElementAC = (index) => ({ type: CHANGE_IS_ACTIVE, index: index });\r\nexport const changeTextOverAC = (index, operation) =>\r\n    ({ type: CHANGE_DESCRIPTION_TEXT, index: index, operation: operation });\r\nexport const changeWeightAC = (index) => ({ type: CHANGE_WEIGHT, index: index });\r\n\r\nlet store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport s from '../Element.module.css'\r\n\r\nconst Circle = (props) => {\r\n        return <div className={`${s.circle} ${props.selectClassName()}`}>\r\n        <span onClick={props.status===\"end\"? undefined: props.changeWeight}>{props.weight[props.currentWeight]}</span><br />\r\n        <p>кг</p>\r\n    </div>\r\n}\r\n\r\nexport default Circle","import React from 'react';\r\nimport s from './Description.module.css'\r\n\r\nconst Description = (props) => {\r\n\r\n    let currentText = () => {\r\n        if (props.currentText === 0)\r\n            return <p className={s.inscription}>Сказочное заморское яство</p>\r\n        else\r\n            return <p className={s.inscription + ' ' + s.active}>Котэ не одобряет?</p>\r\n    };\r\n    \r\n    // создается массив JSX с необходимым форматированием текста(Числа выделены жирным)\r\n    let selectMas = props.select.map((elem, index) => {\r\n        if (Number.isInteger(elem))\r\n            return <b key={index}>{elem}</b>\r\n        else\r\n        return <span key={index}>{elem}<br/></span> \r\n});\r\n\r\nreturn <div className={s.elementDescription}>\r\n    {currentText()}\r\n    <h2>Нямушка</h2>\r\n    <h3>{props.taste}</h3>\r\n    <div>{selectMas}</div>\r\n</div>\r\n}\r\n\r\nexport default Description\r\n","import React from 'react';\r\nimport s from './SignText.module.css'\r\n\r\nconst SignText = (props) => {\r\n\r\n    let printText = () => {\r\n        switch (props.status) {\r\n            case \"active\":\r\n                return <p>{props.signText[1]}</p>;\r\n            case \"end\":\r\n                return <p style={{color: '#ffff66'}}>{props.signText[2]}</p>;\r\n            default:\r\n                return <p>{props.signText[0]} <span onClick={props.selectElement}>купи.</span></p>;\r\n        }\r\n    }\r\n    \r\n    return <div className={s.elementSignText}>\r\n        {printText()}\r\n    </div>\r\n}\r\n\r\nexport default SignText\r\n","import React from 'react';\r\nimport Circle from './Circle/Circle';\r\nimport Description from './Description/Description';\r\nimport s from './Element.module.css'\r\nimport SignText from './SignText/SignText';\r\n\r\n\r\nconst Element = (props) => {\r\n    let index = props.index;\r\n    let status = props.status[index];\r\n    \r\n    let changeWeight = (e) => {\r\n        e.stopPropagation();\r\n        props.changeWeight(index);\r\n    }\r\n    let selectElement = () => {\r\n        props.selectElement(index);\r\n    }\r\n    let changeTextOver = () => {\r\n        props.changeTextOver(index);\r\n    }\r\n    let changeTextEnter = () => {\r\n        props.changeTextEnter(index);\r\n    }\r\n\r\n    // Добавляем новый класс к элементам, для смены стилей при смене выбора упаковки\r\n    let selectClassName = () => {\r\n        switch (status) {\r\n            case 'active':\r\n                return s.active;\r\n            case 'end':\r\n                return s.ended;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={s.element}>\r\n            <div className={`${s.elementItem} ${selectClassName()}`}\r\n                onClick={status === \"end\" ? undefined : selectElement}\r\n                onMouseLeave={status === \"active\" ? changeTextOver : undefined}\r\n                onMouseEnter={status === \"active\" ? changeTextEnter : undefined}>\r\n                {/* Элемент с классом elementCorner отвечает за отрисовку верхней части\r\n                упаковки, в которой срезан левый угол*/}\r\n\r\n                <div className={`${s.elementCorner} ${selectClassName()}`}></div>\r\n\r\n                <Description\r\n                    select={props.select[props.currentWeight[index]]}\r\n                    taste={props.taste[index]}\r\n                    currentText={props.currentText[index]} />\r\n\r\n                <div className={s.elementImage}>\r\n                    <div className={s.elementImageItem}></div>\r\n                </div>\r\n\r\n                <Circle weight={props.weight}\r\n                    currentWeight={props.currentWeight[index]}\r\n                    index={index}\r\n                    status={status}\r\n                    selectClassName={selectClassName} \r\n                    changeWeight={changeWeight}/>\r\n\r\n                <div className={`${s.isEnded} ${selectClassName()}`}></div>\r\n            </div>\r\n\r\n            <SignText index={index}\r\n                selectElement={selectElement}\r\n                signText={props.signText[index]}\r\n                status={status} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Element\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeTextOverAC, selectElementAC, changeWeightAC } from '../redux/reduxStore';\r\nimport Element from './Element';\r\n\r\nlet mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        status: state.status,\r\n        select: state.select,\r\n        currentWeight: state.currentWeight,\r\n        taste: state.taste,\r\n        currentText: state.currentText,\r\n        signText: state.signText,\r\n        weight: state.weight,\r\n        index: ownProps.index\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        // функция смена объема упаковки\r\n        changeWeight: (index) => {\r\n            dispatch(changeWeightAC(index));\r\n        },\r\n        // меняем упаковку на выбранную и наоборот\r\n        selectElement: (index) => {\r\n            dispatch(selectElementAC(index));\r\n        },\r\n\r\n        // Функции отвечающие за смену текста активной упаковке при наведеннии на нее и ухода\r\n        changeTextOver: (index) => {\r\n            dispatch(changeTextOverAC(index, 1));\r\n        },\r\n        changeTextEnter: (index) => {\r\n            dispatch(changeTextOverAC(index, 0));\r\n        }\r\n    }\r\n}\r\n\r\nconst ElementContainer = connect(mapStateToProps, mapDispatchToProps)(Element);\r\nexport default ElementContainer\r\n","import React from 'react';\r\nimport './App.css';\r\nimport ElementContainer from './Element/ElementContainer';\r\n\r\nconst App = (props) => {\r\n  let index = 0;\r\n  \r\n  return (\r\n    <div className='App'>\r\n      <div className='upShadow'></div>\r\n      <div className='downShadow'></div>\r\n      {/*upShadow, downShadow  элементы необходимые для прорисовки верхнейи нижней тени соответственно*/}\r\n      <div className='content'>\r\n        <div className='article'>\r\n          <h1>Ты сегодня покормил кота?</h1>\r\n        </div>\r\n        {/* Элемент для отображения упаковок.\r\nкомпонента Element отрисовывает упаковку  */}\r\n        <div className='elements'>\r\n          <ElementContainer index={index++} />\r\n          <ElementContainer index={index++} />\r\n          <ElementContainer index={index++} />\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './redux/reduxStore';\r\nimport { Provider } from 'react-redux';\r\n\r\nlet rerenderEntireTree = () => {\r\n  ReactDOM.render(\r\n    <Provider store = {store}>\r\n      <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n  );\r\n};\r\nrerenderEntireTree();\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elementDescription\":\"Description_elementDescription__MBWtb\",\"inscription\":\"Description_inscription__2CPxV\",\"active\":\"Description_active__3KtKL\"};"],"sourceRoot":""}