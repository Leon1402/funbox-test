{"version":3,"sources":["Element/Element.module.css","Element/Description/Description.module.css","Element/SignText/SignText.module.css","Element/Circle/Circle.jsx","Element/Description/Description.jsx","Element/SignText/SignText.jsx","Element/Element.jsx","App.js","serviceWorker.js","state.js","index.js"],"names":["module","exports","Circle","props","className","s","circle","selectClassName","onClick","status","undefined","e","stopPropagation","changeWeight","index","weight","currentWeight","Description","selectMas","select","map","elem","key","description","inscription","descriptionText","taste","SignText","selectElement","changeIsActive","elementSignText","signText","style","color","printText","Element","state","active","ended","element","elementBlock","onMouseLeave","changeDescriptionText","onMouseEnter","corner","cat","pictureCat","isEnded","App","currentText","Boolean","window","location","hostname","match","rerenderEntireTree","console","log","operation","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f05be756.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"elementBlock\":\"Element_elementBlock__3Tlm9\",\"circle\":\"Element_circle__2YRgl\",\"corner\":\"Element_corner__2py-i\",\"active\":\"Element_active__3BcJo\",\"ended\":\"Element_ended__3-NIg\",\"cat\":\"Element_cat__2X9kr\",\"pictureCat\":\"Element_pictureCat__16bLf\",\"isEnded\":\"Element_isEnded__2WobI\",\"element\":\"Element_element__1E_O1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Description_description__QTwU-\",\"inscription\":\"Description_inscription__1ORYp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"elementSignText\":\"SignText_elementSignText__3oJ8v\"};","import React from 'react';\r\nimport s from '../Element.module.css'\r\n\r\nconst Circle = (props) => {\r\n    let changeWeight = (e) => {\r\n        e.stopPropagation();\r\n        props.changeWeight(props.index);\r\n    }\r\n\r\n    return <div className={`${s.circle} ${props.selectClassName()}`}>\r\n        <span onClick={props.status===\"end\"? undefined: changeWeight}>{props.weight[props.currentWeight]}</span><br />\r\n        <p>кг</p>\r\n    </div>\r\n}\r\n\r\nexport default Circle","import React from 'react';\r\nimport s from './Description.module.css'\r\n\r\nconst Description = (props) => {\r\n\r\n    let selectMas = props.select.map((elem, index) => <p key={index}>{elem}</p>)\r\n    \r\n    return <div className={s.description}>\r\n        <p className={s.inscription}>{props.descriptionText}</p>\r\n        <h2>Нямушка</h2>\r\n        <h3>{props.taste}</h3>\r\n        {selectMas}\r\n    </div>\r\n}\r\n\r\nexport default Description\r\n","import React from 'react';\r\nimport s from './SignText.module.css'\r\n\r\nconst SignText = (props) => {\r\n\r\n    let selectElement = () => {\r\n        props.changeIsActive(props.index)\r\n    }\r\n    let printText = () => {\r\n        switch (props.status) {\r\n            case \"active\":\r\n                return <p>{props.signText[1]}</p>;\r\n            case \"end\":\r\n                return <p style={{color: '#ffff66'}}>{props.signText[2]}</p>;\r\n            default:\r\n                return <p>{props.signText[0]} <span onClick={selectElement}>купи.</span></p>;\r\n        }\r\n    }\r\n    return <div className={s.elementSignText}>\r\n        {printText()}\r\n    </div>\r\n}\r\n\r\nexport default SignText\r\n","import React from 'react';\r\nimport Circle from './Circle/Circle';\r\nimport Description from './Description/Description';\r\nimport s from './Element.module.css'\r\nimport SignText from './SignText/SignText';\r\n\r\nconst Element = (props) => {\r\n    let index = props.index;\r\n    let status = props.state.status[index];\r\n\r\n    let selectElement = () => {\r\n        props.changeIsActive(index)\r\n    }\r\n    let selectClassName = () => {\r\n        switch (props.state.status[index]) {\r\n            case 'active':\r\n                return s.active;\r\n            case 'end':\r\n                return s.ended;\r\n            default:\r\n                return;\r\n        }  \r\n    };\r\n    let changeTextOver = () => {\r\n        props.changeDescriptionText(index, 0);\r\n    }\r\n    let changeTextEnter = () => {\r\n        props.changeDescriptionText(index, 1);\r\n    }\r\n\r\n    return (\r\n        <div className={s.element}>\r\n            <div className={`${s.elementBlock} ${selectClassName()}`} \r\n            onClick={status===\"end\"? '': selectElement}\r\n            onMouseLeave={status===\"active\"? changeTextOver:''}\r\n            onMouseEnter={status===\"active\"? changeTextEnter:''}>\r\n                <div className={`${s.corner} ${selectClassName()}`}></div>\r\n\r\n                <Description select={props.state.select[props.state.currentWeight[index]]}\r\n                    taste={props.state.taste[index]} \r\n                    descriptionText={props.state.descriptionText[index]}/>\r\n\r\n                <div className={s.cat}>\r\n                    <div className={s.pictureCat}></div>\r\n                </div>\r\n\r\n                <Circle weight={props.state.weight}\r\n                    currentWeight={props.state.currentWeight[index]}\r\n                    changeWeight={props.changeWeight}\r\n                    index={index}\r\n                    status={status} \r\n                    selectClassName={selectClassName}/>\r\n\r\n                <div className={`${s.isEnded} ${selectClassName()}`}></div>\r\n            </div>\r\n\r\n            <SignText index={index}\r\n            changeIsActive={props.changeIsActive}\r\n            signText={props.state.signText[index]}\r\n            status={status}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Element\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Element from './Element/Element';\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div className='App'>\r\n      <div className='content'>\r\n        <div className='article'>\r\n          <h1>Ты сегодня покормил кота?</h1>\r\n        </div>\r\n\r\n        <div className='elements'>\r\n          <Element state={props.state}\r\n            index={0}\r\n            changeWeight={props.changeWeight}\r\n            changeIsActive={props.changeIsActive}\r\n            changeDescriptionText={props.changeDescriptionText} />\r\n\r\n          <Element state={props.state}\r\n            taste={props.state.taste[1]}\r\n            weight={props.state.weight}\r\n            currentWeight={props.state.currentWeight[1]}\r\n            changeWeight={props.changeWeight}\r\n            index={1}\r\n            changeIsActive={props.changeIsActive}\r\n            status={props.state.status[1]}\r\n            signText={props.state.signText[1]}\r\n            descriptionText={props.state.currentText[1]}\r\n            changeDescriptionText={props.changeDescriptionText} />\r\n\r\n          <Element state={props.state}\r\n            taste={props.state.taste[2]}\r\n            weight={props.state.weight}\r\n            currentWeight={props.state.currentWeight[2]}\r\n            changeWeight={props.changeWeight}\r\n            index={2}\r\n            changeIsActive={props.changeIsActive}\r\n            status={props.state.status[2]}\r\n            signText={props.state.signText[2]}\r\n            descriptionText={props.state.currentText[2]}\r\n            changeDescriptionText={props.changeDescriptionText} />\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let rerenderEntireTree = () => {\r\n    console.log('asd')\r\n}\r\nlet state = {\r\n    select: [\r\n        ['10 порций', 'мышь в подарок'],\r\n        ['40 порций', '2 мыши в подарок'],\r\n        ['100 порций', '5 мышей в подарок', 'заказчик доволен']\r\n    ],\r\n    descriptionText: [\r\n        'Сказочное заморское яство',\r\n        'Котэ не одобряет?'],\r\n\r\n    currentText: [\r\n        'Сказочное заморское яство',\r\n        'Сказочное заморское яство',\r\n        'Сказочное заморское яство'\r\n    ],\r\n    taste: [\r\n        'с фуа-гра',\r\n        'с рыбой',\r\n        'с курой'\r\n    ],\r\n    signText: [\r\n        ['Чего сидишь? Порадуй котэ, ',\r\n            'Печень утки разварная с артишоками.',\r\n            'Печалька, с фуа-гра закончился.'],\r\n\r\n        ['Чего сидишь? Порадуй котэ, ',\r\n            'Филе из цыплят с трюфелями в бульоне',\r\n            'Печалька, с рыбой закончился.'],\r\n\r\n        ['Чего сидишь? Порадуй котэ, ',\r\n            'Печень утки разварная с артишоками.',\r\n            'Печалька, с курой закончился.'],\r\n    ],\r\n    weight: ['0,5', '2', '5'],\r\n    currentWeight: [0, 0, 0],\r\n    status: ['normal', 'normal', 'end']\r\n}\r\n\r\nexport let changeWeight = (index) => {\r\n    state.currentWeight[index] = \r\n        (state.currentWeight[index] === 2) ? 0 : state.currentWeight[index] + 1;\r\n    rerenderEntireTree();\r\n}\r\nexport let subscribers = (observer) => {\r\n    rerenderEntireTree = observer;\r\n}\r\nexport let changeIsActive = (index) => {\r\n    state.status[index] = state.status[index] === 'normal' ? 'active' : 'normal';\r\n    rerenderEntireTree();\r\n}\r\nexport let changeDescriptionText = (index, operation) => {\r\n    if (operation)\r\n        state.currentText[index] = state.descriptionText[0];\r\n    else\r\n        state.currentText[index] = state.descriptionText[1];\r\n    rerenderEntireTree();\r\n}\r\nexport default state;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport state, { changeDescriptionText, changeIsActive, changeWeight, subscribers } from './state';\r\n\r\nlet rerenderEntireTree = () => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App state = {state} changeWeight={changeWeight} \r\n      changeIsActive={changeIsActive}\r\n      changeDescriptionText={changeDescriptionText}/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\nrerenderEntireTree();\r\nsubscribers(rerenderEntireTree);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\nexport default rerenderEntireTree;"],"sourceRoot":""}